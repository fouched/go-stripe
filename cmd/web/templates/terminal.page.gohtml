{{template "base" .}}

{{define "title"}}
    Virtual Terminal
{{end}}

{{define "content"}}
    <h2 class="mt-3 text-center">Virtual Terminal</h2>
    <hr>
    <div class="alert alert-danger text-center d-none" id="card_messages"></div>
    <form action="/payment-succeeded" method="POST"
        name="charge_form" id="charge_form"
        class="d-block needs-validation charge-form"
        autocomplete="off" novalidate>

        <div class="mb-3">
            <label for="amount" class="form-label">Amount</label>
            <input type="text" class="form-control" id="amount" name="amount"
                required="" autocomplete="amount_new">
        </div>

        <div class="mb-3">
            <label for="cardholder_name" class="form-label">Cardholder Name</label>
            <input type="text" class="form-control" id="cardholder_name" name="cardholder_name"
                   required="" autocomplete="cardholder_name_new">
        </div>

        <div class="mb-3">
            <label for="cardholder_email" class="form-label">Cardholder Email</label>
            <input type="email" class="form-control" id="cardholder_email" name="cardholder_email"
                   required="" autocomplete="cardholder_email_new">
        </div>

        <!-- card number will be built by stripe -->
        <div class="mb-3">
            <label for="card_element" class="form-label">Credit Card</label>
            <div id="card_element" class="form-control"></div>
            <div id="card_errors" class="alert alert-danger text-center d-none" role="alert"></div>
            <div id="card_success" class="alert alert-success text-center d-none" role="alert"></div>
        </div>

        <hr>

        <a id="pay_button" href="javascript:void(0)" class="btn btn-primary" onclick="val()">Charge Card</a>
        <div class="text-center d-none" id="processing_payment">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>

        <input type="hidden" name="payment_intent" id="payment_intent">
        <input type="hidden" name="payment_method" id="payment_method">
        <input type="hidden" name="payment_amount" id="payment_amount">
        <input type="hidden" name="payment_currency" id="payment_currency">
    </form>
{{end}}

{{define "js"}}
    <script src="https://js.stripe.com/v3"></script>

    <script>
        let card;
        let stripe;
        const cardMessages = document.getElementById("card_messages")
        const payButton = document.getElementById("pay_button")
        const processing = document.getElementById("processing_payment")

        stripe = Stripe('')

        function hidePayButton() {
            payButton.classList.add("d-none")
            processing.classList.remove("d-none")
        }

        function showPayButton() {
            payButton.classList.remove("d-none")
            processing.classList.add("d-none")
        }

        function showCardError(msg) {
            cardMessages.classList.add("alert-danger");
            cardMessages.classList.remove("alert-success");
            cardMessages.classList.remove("d-none");
            cardMessages.innerHTML = msg;
        }

        function showCardSuccess() {
            cardMessages.classList.remove("alert-danger");
            cardMessages.classList.add("alert-success");
            cardMessages.classList.remove("d-none");
            cardMessages.innerHTML = "Transaction successful";
        }

        function val() {
            let form = document.getElementById("charge_form")
            // use standard Bootstrap validation
            if (form.checkValidity() === false) {
                this.event.preventDefault();
                this.event.stopPropagation();
                form.classList.add("was-validated");
                return;
            }
            form.classList.add("was-validated");
            hidePayButton()

            let amountToCharge = String(parseFloat(document.getElementById("amount").value) * 100)
            let payload = {
                amount: amountToCharge,
                currency : 'cad',
            }
            const requestOptions = {
                method: 'post',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(payload),
            }

            fetch("http://localhost:4001/api/payment-intent", requestOptions)
                .then(response => response.text())
                .then(response => {
                    let data;
                    try {
                        data = JSON.parse(response);
                        stripe.confirmCardPayment(data.client_secret, {
                            payment_method: {
                                card: card,
                                billing_details: {
                                    name: document.getElementById("cardholder_name").value,
                                }
                            }

                        }).then(function(result) {
                            if (result.error) {
                                // card declined or something went wrong
                                showCardError(result.error.message);
                                showPayButton();
                            } else if (result.paymentIntent) {
                                if (result.paymentIntent.status === "succeeded") {
                                    // we have charged the card
                                    document.getElementById("payment_method").value = result.paymentIntent.payment_method_types[0];
                                    document.getElementById("payment_intent").value = result.paymentIntent.id;
                                    document.getElementById("payment_amount").value = result.paymentIntent.amount;
                                    document.getElementById("payment_currency").value = result.paymentIntent.currency;
                                    processing.classList.add("d-none");
                                    showCardSuccess();
                                    // would submit the form
                                }
                            }
                        })
                    } catch (err) {
                        console.log(err);
                        showCardError("Invalid response from payment gateway");
                        showPayButton();
                    }
                })
        }

        (function() {
            // create stripe & elements
            const elements = stripe.elements();
            const style = {
                base: {
                    fontSize: '16px',
                    lineHeight: '24px'
                }
            };

            // create card entry
            card = elements.create('card', {
                style: style,
                hidePostalCode: true,
            })
            card.mount("#card_element");

            // check for input errors
            card.addEventListener('change', function(event) {
                let displayError = document.getElementById("card_errors");
                if (event.error) {
                    displayError.classList.remove('d-none');
                    displayError.textContent = event.error.message;
                } else {
                    displayError.classList.add('d-none');
                    displayError.textContent = '';
                }
            })
        })();
    </script>
{{end}}