{{template "base" .}}

{{define "title"}}
    Login
{{end}}

{{define "content"}}
<div class="row">
    <div class="col-md-6 offset-md-3">

        <div class="alert alert-danger text-center d-none mt-3" id="login_messages"></div>

        <form action="/login" method="POST"
              name="login_form" id="login_form"
              class="d-block needs-validation login_form"
              autocomplete="off" novalidate>

            <h2 class="mt-2 mb-3 text-center">Login</h2>
            <hr>

            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <input type="email" class="form-control" id="email" name="email"
                       required="" autocomplete="email_new">
            </div>

            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <input type="password" class="form-control" id="password" name="password"
                       required="" autocomplete="password_new">
            </div>

            <hr>

            <a href="javascript:void(0)" class="btn btn-primary" onclick="val()">Login</a>
            <p class="mt-2">
                <small><a href="/forgot-password">Forgot password?</a></small>
            </p>
        </form>
    </div>
</div>

{{end}}

{{define "js"}}
<script>

    const loginMessages = document.getElementById("login_messages")

    function showError(msg) {
        loginMessages.classList.add("alert-danger");
        loginMessages.classList.remove("alert-success");
        loginMessages.classList.remove("d-none");
        loginMessages.innerHTML = msg;
    }

    function showSuccess() {
        loginMessages.classList.remove("alert-danger");
        loginMessages.classList.add("alert-success");
        loginMessages.classList.remove("d-none");
        loginMessages.innerHTML = "Login successful";
    }

    function val() {
        let form = document.getElementById("login_form")
        // use standard Bootstrap validation
        if (form.checkValidity() === false) {
            this.event.preventDefault();
            this.event.stopPropagation();
            form.classList.add("was-validated");
            return;
        }
        form.classList.add("was-validated");

        let payload = {
            email: document.getElementById("email").value,
            password : document.getElementById("password").value,
        }
        const requestOptions = {
            method: 'post',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(payload),
        }

        fetch("{{.API}}/api/authenticate", requestOptions)
            .then(response => response.json())
            .then(data => {
                console.log(data)
                if (data.error === false) {
                    localStorage.setItem('token', data.authentication_token.token);
                    localStorage.setItem('token_expiry', data.authentication_token.expiry);
                    showSuccess();
                    document.getElementById("login_form").submit();
                } else {
                    showError(data.message)
                }
            })
    }
</script>
{{end}}