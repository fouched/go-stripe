{{template "base" .}}

{{define "title"}}
    Admin Users
{{end}}

{{define "content"}}
    <h2 class="mt-5">Admin User</h2>
    <hr>
    <form class="needs-validation" method="post" action=""
          name="user_form" id="user_form" autocomplete="off" novalidate="">

        <div class="mb-3">
            <label for="first_name" class="form-label">First Name</label>
            <input type="text" class="form-control" id="first_name" name="first_name"
                autocomplete="first_name_new" required>
        </div>

        <div class="mb-3">
            <label for="last_name" class="form-label">Last Name</label>
            <input type="text" class="form-control" id="last_name" name="last_name"
                   autocomplete="last_name_new" required>
        </div>

        <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <input type="email" class="form-control" id="email" name="email"
                   autocomplete="email_new" required>
        </div>

        <div class="d-none" id="edit_pwd">
            <div class="mt-5">Change the password if required</div>
            <hr class="mb-3">
        </div>

        <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <input type="password" class="form-control" id="password" name="password"
                   autocomplete="password_new">
        </div>

        <div class="mb-3">
            <label for="verify_password" class="form-label">Verify Password</label>
            <input type="password" class="form-control" id="verify_password" name="verify_password"
                   autocomplete="verify_password_new">
        </div>

        <hr>

        <div class="float-start">
            <a href="javascript:void(0)" class="btn btn-primary" onclick="val()" id="save_btn">Save Changes</a>
            <a href="javascript:void(0)" class="btn btn-warning" onclick='location.href="/admin/all-users"' id="cancel-btn">Cancel</a>
        </div>
        <div class="float-end">
            <a href="javascript:void(0)" class="btn btn-danger d-none" id="delete_btn">Delete</a>
        </div>

    </form>

{{end}}

{{define "js"}}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
let token = localStorage.getItem("token");
let id = window.location.pathname.split("/").pop();
let delBtn = document.getElementById("delete_btn");
let editLbl = document.getElementById("edit_pwd")

function val() {
    let form = document.getElementById("user_form");
    // use bootstrap validation
    if (form.checkValidity() === false) {
        this.event.preventDefault();
        this.event.stopPropagation();
        form.classList.add("was-validated");
        return;
    }

    form.classList.add("was-validated");
    if (document.getElementById("password").value !== document.getElementById("verify_password").value) {
        Swal.fire("Passwords do not match!");
        return;
    }

    let payload = {
        id: parseInt(id, 10),
        first_name: document.getElementById("first_name").value,
        last_name: document.getElementById("last_name").value,
        email: document.getElementById("email").value,
        password: document.getElementById("password").value,
    }

    const requestOptions = {
        method: 'post',
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
            'Authorization': 'Bearer ' + token,
        },
        body: JSON.stringify(payload),
    }

    fetch("{{.API}}/api/admin/all-users/edit/" + id, requestOptions)
        .then(response => response.json())
        .then(function(data) {
            if (data.error) {
                Swal.fire("Error: " + data.message);
            } else {
                location.href = "/admin/all-users";
            }
        })
}

document.addEventListener("DOMContentLoaded", function() {

    if (id !== "0") {

        editLbl.classList.remove("d-none")

        // do not allow a user to delete themselves
        if (id !== "{{.UserID}}") {
            delBtn.classList.remove("d-none");
        }

        const requestOptions = {
            method: 'post',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
                'Authorization': 'Bearer ' + token,
            }
        }

        fetch('{{.API}}/api/admin/all-users/' + id, requestOptions)
            .then(response => response.json())
            .then(function (data) {
                console.log(data);
                if (data) {
                    document.getElementById("first_name").value = data.first_name;
                    document.getElementById("last_name").value = data.last_name;
                    document.getElementById("email").value = data.email;
                }
            });
    }

})

delBtn.addEventListener("click", function () {
    Swal.fire({
        title: "Are you sure?",
        text: "You won't be able to undo this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Delete User"
    }).then((result) => {
        if (result.isConfirmed) {
            const requestOptions = {
                method: 'post',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + token,
                }
            }

            fetch("{{.API}}/api/admin/all-users/delete/" + id, requestOptions)
                .then(response => response.json())
                .then(function(data) {
                    if (data.error) {
                        Swal.fire("Error: " + data.message);
                    } else {
                        location.href = "/admin/all-users";
                    }
                })
        }
    });
})

</script>
{{end}}